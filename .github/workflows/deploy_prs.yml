name: PR Deployment Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

env:
  IMAGE_NAME: dabblefox-api
  TAG: PR${{ github.event.pull_request.number }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout code
      if: github.event.action != 'closed'
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'

    - name: Cleanup AAS Slot
      if: github.event.action == 'closed' || github.event.action == 'synchronize'
      run: |
        az webapp deployment slot delete \
        --resource-group ${{ secrets.RESOURCE_GROUP }} \
        --name ${{ secrets.APP_NAME }}  \
        --slot ${{ env.TAG }}
        echo "Deployment slot deleted: ${{ secrets.APP_NAME }}-${{ env.TAG }}"
  
    - name: Delete Container Image from ACR
      if: github.event.action == 'closed' || github.event.action == 'synchronize'
      run: |
        az acr repository delete \
        --name ${{ secrets.REGISTRY_NAME }} \
        --image ${{ env.IMAGE_NAME }}:${{ env.TAG }} \
        --yes
        echo "Container image deleted: ${{ env.IMAGE_NAME }}:${{ env.TAG }}"

    - name: Login to ACR
      if: github.event.action != 'closed'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build, tag, and push image to ACR
      if: github.event.action != 'closed'
      run: |
        docker build . -t ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
        docker push ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
    
    - name: Get Key Vault Secrets
      if: github.event.action != 'closed'
      id: get_secrets
      run: |
        echo "TEST_SECRET_VALUE=$(az keyvault secret show --name TestSecretName --vault-name ${{ secrets.KEY_VAULT_NAME }} --query value -o tsv)" >> $GITHUB_ENV

    - name: Create Deployment Slot
      if: github.event.action != 'closed'
      run: |
        SLOT_NAME="${{ env.TAG }}"
        APP_NAME="${{ secrets.APP_NAME }}"
        az webapp deployment slot create --name $APP_NAME --resource-group ${{ secrets.RESOURCE_GROUP }} --slot $SLOT_NAME
        echo "Deployment slot created: ${{ secrets.APP_NAME }}-${{ env.TAG }}"
        az webapp config appsettings set --name $APP_NAME --resource-group ${{ secrets.RESOURCE_GROUP }} --slot $SLOT_NAME --settings TEST_SECRET=${{ env.TEST_SECRET_VALUE }}

    - name: Deploy from ACR to Slot
      if: github.event.action != 'closed'
      run: |
        az webapp config container set \
        --name ${{ secrets.APP_NAME }}  \
        --resource-group ${{ secrets.RESOURCE_GROUP }} \
        --slot ${{ env.TAG }} \
        --docker-custom-image-name ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} \
        --docker-registry-server-url https://${{ secrets.REGISTRY }} \
        --docker-registry-server-user ${{ secrets.REGISTRY_USERNAME }} \
        --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }}

    