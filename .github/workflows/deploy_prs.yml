name: PR Deployment Workflow

on:
  pull_request:
    types: [opened, reopened, closed]

env:
  IMAGE_NAME: dabblefox-api
  TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
#    - name: Checkout code
#      if: github.event.action != 'closed'
#      uses: actions/checkout@v2
#
#    - name: Login to ACR
#      if: github.event.action != 'closed'
#      uses: azure/docker-login@v1
#      with:
#        login-server: ${{ secrets.REGISTRY }}
#        username: ${{ secrets.REGISTRY_USERNAME }}
#        password: ${{ secrets.REGISTRY_PASSWORD }}

#    - name: Build, tag, and push image to ACR
#      if: github.event.action != 'closed'
#      run: |
#        docker build . -t ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
#        docker push ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.CREDENTIALS }}
        allow-no-subscriptions: true

    - name: Create Deployment Slot
      if: github.event.action != 'closed'
      run: |
        SLOT_NAME="${{ secrets.APP_NAME }}-${{ github.event.pull_request.number }}"
        APP_NAME="${{ secrets.APP_NAME }}"
        az webapp deployment slot create --name $APP_NAME --resource-group ${{ secrets.RESOURCE_GROUP }} --slot $SLOT_NAME
        echo "Deployment slot created: $SLOT_NAME"

#    - name: Set up Python for Azure Scripting
#      if: github.event.action != 'closed'
#      uses: actions/setup-python@v2
#      with:
#        python-version: '3.x'
#
#    - name: Install Azure CLI
#      run: pip install azure-cli
#
#    - name: Login to Azure using Publishing Profile
#      run: |
#        echo ${{ secrets.PUBLISH_PROFILE }} > publishProfile.xml
#        az webapp deployment slot create \
#        --resource-group ${{ secrets.RESOURCE_GROUP }} \
#        --name ${{ secrets.APP_NAME }} \
#        --slot ${{ secrets.APP_NAME }}-${{ github.event.pull_request.number }} \
#        --configuration-source ${{ secrets.APP_NAME }} 
#        echo "Deployment slot created: ${{ secrets.APP_NAME }}-${{ github.event.pull_request.number }}"

#    - name: Deploy from ACR to Slot
#      if: github.event.action != 'closed'
#      run: |
#        az webapp config container set \
#        --name ${{ secrets.APP_NAME }}  \
#        --resource-group ${{ secrets.RESOURCE_GROUP }} \
#        --slot ${{ secrets.APP_NAME }}-${{ github.event.pull_request.number }} \
#        --docker-custom-image-name ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} \
#        --docker-registry-server-url https://${{ secrets.REGISTRY }} \
#        --docker-registry-server-user ${{ secrets.REGISTRY_USERNAME }} \
#        --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }}

#    - name: Deploy from ACR to AAS Slot
#      if: github.event.action != 'closed'
#      uses: azure/webapps-deploy@v2
#      with:
#        app-name: ${{ secrets.APP_NAME }}
#        slot-name: ${{ secrets.APP_NAME }}-${{ github.event.pull_request.number }}
#        publish-profile: ${{ secrets.PUBLISH_PROFILE }}
#        images: ${{ secrets.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
#
#    - name: Cleanup AAS Slot
#      if: github.event.action == 'closed'
#      run: |
#        az webapp deployment slot delete \
#        --resource-group ${{ secrets.RESOURCE_GROUP }} \
#        --name ${{ secrets.APP_NAME }}  \
#        --slot ${{ secrets.APP_NAME }}-${{ github.event.pull_request.number }}
#        echo "Deployment slot deleted: ${{ secrets.APP_NAME }}-${{ github.event.pull_request.number }}"